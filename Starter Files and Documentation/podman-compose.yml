version: '2'

volumes:
  zookeeper1-data:
  zookeeper1-log:
  zookeeper2-data:
  zookeeper2-log:
  kafka1-data:
  kafka2-data:

services:
  zookeeper-1:
    image: docker.io/confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2889:3889
      # Extended timeouts for graceful shutdown
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5
      ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT: 3
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: 24
      # Session timeout settings
      ZOOKEEPER_MIN_SESSION_TIMEOUT: 4000
      ZOOKEEPER_MAX_SESSION_TIMEOUT: 40000
    ports:
      - 22181:2181
    volumes:
      - zookeeper1-data:/var/lib/zookeeper/data
      - zookeeper1-log:/var/lib/zookeeper/log
    # Graceful shutdown settings
    stop_grace_period: 30s
    stop_signal: SIGTERM
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  zookeeper-2:
    image: docker.io/confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2889:3889
      # Extended timeouts for graceful shutdown
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5
      ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT: 3
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: 24
      # Session timeout settings
      ZOOKEEPER_MIN_SESSION_TIMEOUT: 4000
      ZOOKEEPER_MAX_SESSION_TIMEOUT: 40000
    ports:
      - 32181:2181
    volumes:
      - zookeeper2-data:/var/lib/zookeeper/data
      - zookeeper2-log:/var/lib/zookeeper/log
    # Graceful shutdown settings
    stop_grace_period: 30s
    stop_signal: SIGTERM
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  kafka-1:
    image: docker.io/confluentinc/cp-kafka:7.3.0
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
    ports:
      - 29092:29092
    volumes:
      - kafka1-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_MIN_IN_SYNC_REPLICAS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      
      # ZooKeeper connection settings for graceful shutdown
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 18000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 18000
      KAFKA_ZOOKEEPER_SET_ACL: "false"
      
      # Graceful shutdown configuration
      KAFKA_CONTROLLED_SHUTDOWN_ENABLE: "true"
      KAFKA_CONTROLLED_SHUTDOWN_MAX_RETRIES: 3
      KAFKA_CONTROLLED_SHUTDOWN_RETRY_BACKOFF_MS: 5000
      
      # Network and I/O settings
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_QUEUED_MAX_REQUESTS: 500
      
      # Log settings for data preservation
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_LOG_CLEANUP_POLICY: delete
      
      # Replication settings
      KAFKA_NUM_REPLICA_FETCHERS: 1
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1048576
      
      # Producer settings
      KAFKA_COMPRESSION_TYPE: producer
      
      # Consumer settings
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      
      # JVM settings for graceful shutdown
      KAFKA_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -Djava.awt.headless=true"
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      
    # Graceful shutdown settings
    stop_grace_period: 60s
    stop_signal: SIGTERM
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  kafka-2:
    image: docker.io/confluentinc/cp-kafka:7.3.0
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
    ports:
      - 39092:39092
    volumes:
      - kafka2-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_MIN_IN_SYNC_REPLICAS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      
      # ZooKeeper connection settings for graceful shutdown
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 18000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 18000
      KAFKA_ZOOKEEPER_SET_ACL: "false"
      
      # Graceful shutdown configuration
      KAFKA_CONTROLLED_SHUTDOWN_ENABLE: "true"
      KAFKA_CONTROLLED_SHUTDOWN_MAX_RETRIES: 3
      KAFKA_CONTROLLED_SHUTDOWN_RETRY_BACKOFF_MS: 5000
      
      # Network and I/O settings
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 8
      KAFKA_QUEUED_MAX_REQUESTS: 500
      
      # Log settings for data preservation
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_LOG_CLEANUP_POLICY: delete
      
      # Replication settings
      KAFKA_NUM_REPLICA_FETCHERS: 1
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1048576
      
      # Producer settings
      KAFKA_COMPRESSION_TYPE: producer
      
      # Consumer settings
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      
      # JVM settings for graceful shutdown
      KAFKA_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -Djava.awt.headless=true"
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      
    # Graceful shutdown settings
    stop_grace_period: 60s
    stop_signal: SIGTERM
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  kafka_manager:
    image: docker.io/hlebalbau/kafka-manager:stable
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
    ports:
      - "9001:9000"
    environment:
      ZK_HOSTS: "zookeeper-1:2181,zookeeper-2:2181"
      APPLICATION_SECRET: "random-secret"
    stop_grace_period: 30s
    stop_signal: SIGTERM
